[33mcommit 29f9a3cde67506e75904e65620d5c9c3886d4f9a[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m
Author: SoyeonL <sylee932003@gmail.com>
Date:   Wed Jan 3 18:14:59 2024 -0800

    Typing Category Selectors

[1mdiff --git a/src/store/categories/categories.reducer.ts b/src/store/categories/categories.reducer.ts[m
[1mindex 16fec25..8bd4e9a 100644[m
[1m--- a/src/store/categories/categories.reducer.ts[m
[1m+++ b/src/store/categories/categories.reducer.ts[m
[36m@@ -1,7 +1,13 @@[m
[31m-import { CATEGORIES_ACTION_TYPES } from "./categories.types";[m
[32m+[m[32mimport { CATEGORIES_ACTION_TYPES, Category } from "./categories.types";[m
 [m
 import { CategoryAction } from "./categories.action";[m
 [m
[32m+[m[32mexport type CategoriesState = {[m
[32m+[m[32m  readonly categories: Category[];[m
[32m+[m[32m  readonly isLoading: boolean;[m
[32m+[m[32m  readonly error: Error | null;[m
[32m+[m[32m};[m
[32m+[m
 export const CATEGORIES_INITIAL_STATE = {[m
   categories: [],[m
   isLoading: false,[m
[36m@@ -12,15 +18,13 @@[m [mexport const categoriesReducer = ([m
   state = CATEGORIES_INITIAL_STATE,[m
   action = {} as CategoryAction[m
 ) => {[m
[31m-  const { type, payload } = action;[m
[31m-[m
[31m-  switch (type) {[m
[32m+[m[32m  switch (action.type) {[m
     case CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_START:[m
       return { ...state, isLoading: true };[m
     case CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_SUCCESS:[m
[31m-      return { ...state, categories: payload, isLoading: false };[m
[32m+[m[32m      return { ...state, categories: action.payload, isLoading: false };[m
     case CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_FAILED:[m
[31m-      return { ...state, error: payload, isLoading: false };[m
[32m+[m[32m      return { ...state, error: action.payload, isLoading: false };[m
     default:[m
       return state;[m
   }[m
[1mdiff --git a/src/store/categories/categories.selector.js b/src/store/categories/categories.selector.ts[m
[1msimilarity index 100%[m
[1mrename from src/store/categories/categories.selector.js[m
[1mrename to src/store/categories/categories.selector.ts[m
[1mdiff --git a/src/store/categories/categories.types.ts b/src/store/categories/categories.types.ts[m
[1mindex b83d9ef..e06c7cf 100644[m
[1m--- a/src/store/categories/categories.types.ts[m
[1m+++ b/src/store/categories/categories.types.ts[m
[36m@@ -16,3 +16,7 @@[m [mexport type Category = {[m
   imageUrl: string;[m
   items: CategoryItem[];[m
 };[m
[32m+[m
[32m+[m[32mexport type CategoryMap = {[m
[32m+[m[32m  [key: string]: CategoryItem[];[m
[32m+[m[32m};[m

[33mcommit fd3417e2c00574158f4c4484974e47a129d9bc58[m
Author: SoyeonL <sylee932003@gmail.com>
Date:   Wed Jan 3 18:01:27 2024 -0800

    Typing Category Action Creators

[1mdiff --git a/src/store/categories/categories.action.js b/src/store/categories/categories.action.js[m
[1mdeleted file mode 100644[m
[1mindex 7970507..0000000[m
[1m--- a/src/store/categories/categories.action.js[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m-import { createAction } from "../../utils/reducer/reducer.utils";[m
[31m-import { CATEGORIES_ACTION_TYPES } from "./categories.types";[m
[31m-[m
[31m-export const fetchCategoriesStart = () =>[m
[31m-  createAction(CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_START);[m
[31m-[m
[31m-export const fetchCategoriesSuccess = (categoriesArray) =>[m
[31m-  createAction([m
[31m-    CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_SUCCESS,[m
[31m-    categoriesArray[m
[31m-  );[m
[31m-[m
[31m-export const fetchCategoriesFailed = (error) =>[m
[31m-  createAction(CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_FAILED, error);[m
[1mdiff --git a/src/store/categories/categories.action.ts b/src/store/categories/categories.action.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..1dc90a2[m
[1m--- /dev/null[m
[1m+++ b/src/store/categories/categories.action.ts[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32mimport {[m
[32m+[m[32m  createAction,[m
[32m+[m[32m  Action,[m
[32m+[m[32m  ActionWithPayload,[m
[32m+[m[32m} from "../../utils/reducer/reducer.utils";[m
[32m+[m[32mimport { CATEGORIES_ACTION_TYPES, Category } from "./categories.types";[m
[32m+[m
[32m+[m[32mexport type FetchCategoriesStart =[m
[32m+[m[32m  Action<CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_START>;[m
[32m+[m
[32m+[m[32mexport type FetchCategoriesSuccess = ActionWithPayload<[m
[32m+[m[32m  CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_SUCCESS,[m
[32m+[m[32m  Category[][m
[32m+[m[32m>;[m
[32m+[m
[32m+[m[32mexport type FetchCategoriesFailed = ActionWithPayload<[m
[32m+[m[32m  CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_FAILED,[m
[32m+[m[32m  Error[m
[32m+[m[32m>;[m
[32m+[m
[32m+[m[32mexport type CategoryAction =[m
[32m+[m[32m  | FetchCategoriesStart[m
[32m+[m[32m  | FetchCategoriesSuccess[m
[32m+[m[32m  | FetchCategoriesFailed;[m
[32m+[m
[32m+[m[32mexport const fetchCategoriesStart = (): FetchCategoriesStart =>[m
[32m+[m[32m  createAction(CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_START);[m
[32m+[m
[32m+[m[32mexport const fetchCategoriesSuccess = ([m
[32m+[m[32m  categoriesArray: Category[][m
[32m+[m[32m): FetchCategoriesSuccess =>[m
[32m+[m[32m  createAction([m
[32m+[m[32m    CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_SUCCESS,[m
[32m+[m[32m    categoriesArray[m
[32m+[m[32m  );[m
[32m+[m
[32m+[m[32mexport const fetchCategoriesFailed = (error: Error): FetchCategoriesFailed =>[m
[32m+[m[32m  createAction(CATEGORIES_ACTION_TYPES.FETCH_CATEGORIES_FAILED, error);[m
[1mdiff --git a/src/store/categories/categories.reducer.js b/src/store/categories/categories.reducer.ts[m
[1msimilarity index 73%[m
[1mrename from src/store/categories/categories.reducer.js[m
[1mrename to src/store/categories/categories.reducer.ts[m
[1mindex a5747bc..16fec25 100644[m
[1m--- a/src/store/categories/categories.reducer.js[m
[1m+++ b/src/store/categories/categories.reducer.ts[m
[36m@@ -1,12 +1,17 @@[m
 import { CATEGORIES_ACTION_TYPES } from "./categories.types";[m
 [m
[31m-const INITIAL_STATE = {[m
[32m+[m[32mimport { CategoryAction } from "./categories.action";[m
[32m+[m
[32m+[m[32mexport const CATEGORIES_INITIAL_STATE = {[m
   categories: [],[m
   isLoading: false,[m
   error: null,[m
 };[m
 [m
[31m-export const categoriesReducer = (state = INITIAL_STATE, action) => {[m
[32m+[m[32mexport const categoriesReducer = ([m
[32m+[m[32m  state = CATEGORIES_INITIAL_STATE,[m
[32m+[m[32m  action = {} as CategoryAction[m
[32m+[m[32m) => {[m
   const { type, payload } = action;[m
 [m
   switch (type) {[m
[1mdiff --git a/src/store/categories/categories.types.js b/src/store/categories/categories.types.js[m
[1mdeleted file mode 100644[m
[1mindex ec3e32b..0000000[m
[1m--- a/src/store/categories/categories.types.js[m
[1m+++ /dev/null[m
[36m@@ -1,5 +0,0 @@[m
[31m-export const CATEGORIES_ACTION_TYPES = {[m
[31m-  FETCH_CATEGORIES_START: "category/FETCH_CATEGORIES_START",[m
[31m-  FETCH_CATEGORIES_SUCCESS: "category/FETCH_CATEGORIES_SUCCESS",[m
[31m-  FETCH_CATEGORIES_FAILED: "category/FETCH_CATEGORIES_FAILED",[m
[31m-};[m
[1mdiff --git a/src/store/categories/categories.types.ts b/src/store/categories/categories.types.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..b83d9ef[m
[1m--- /dev/null[m
[1m+++ b/src/store/categories/categories.types.ts[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mexport enum CATEGORIES_ACTION_TYPES {[m
[32m+[m[32m  FETCH_CATEGORIES_START = "category/FETCH_CATEGORIES_START",[m
[32m+[m[32m  FETCH_CATEGORIES_SUCCESS = "category/FETCH_CATEGORIES_SUCCESS",[m
[32m+[m[32m  FETCH_CATEGORIES_FAILED = "category/FETCH_CATEGORIES_FAILED",[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport type CategoryItem = {[m
[32m+[m[32m  id: number;[m
[32m+[m[32m  imageUrl: string;[m
[32m+[m[32m  name: string;[m
[32m+[m[32m  price: number;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport type Category = {[m
[32m+[m[32m  title: string;[m
[32m+[m[32m  imageUrl: string;[m
[32m+[m[32m  items: CategoryItem[];[m
[32m+[m[32m};[m
[1mdiff --git a/src/utils/reducer/reducer.utils.js b/src/utils/reducer/reducer.utils.js[m
[1mdeleted file mode 100644[m
[1mindex bb75b8e..0000000[m
[1m--- a/src/utils/reducer/reducer.utils.js[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-export const createAction = (type, payload) => ({ type, payload });[m
[1mdiff --git a/src/utils/reducer/reducer.utils.ts b/src/utils/reducer/reducer.utils.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..437bfa2[m
[1m--- /dev/null[m
[1m+++ b/src/utils/reducer/reducer.utils.ts[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mimport { AnyAction } from "redux";[m
[32m+[m
[32m+[m[32mexport type ActionWithPayload<T, P> = {[m
[32m+[m[32m  type: T;[m
[32m+[m[32m  payload: P;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport type Action<T> = {[m
[32m+[m[32m  type: T;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport function createAction<T extends string, P>([m
[32m+[m[32m  type: T,[m
[32m+[m[32m  payload: P[m
[32m+[m[32m): ActionWithPayload<T, P>;[m
[32m+[m
[32m+[m[32mexport function createAction<T extends string>([m
[32m+[m[32m  type: T,[m
[32m+[m[32m  payload: void[m
[32m+[m[32m): Action<T>;[m
[32m+[m
[32m+[m[32mexport function createAction<T extends string, P>(type: T, payload: P) {[m
[32m+[m[32m  return { type, payload };[m
[32m+[m[32m}[m

[33mcommit fbe3fede3d4151d7f9b023f148170a6841a80643[m
Author: SoyeonL <sylee932003@gmail.com>
Date:   Fri Dec 29 17:53:22 2023 -0800

    updating sign out saga and signin sagas

[1mdiff --git a/src/components/sign-in-form/sign-in-form.component.jsx b/src/components/sign-in-form/sign-in-form.component.jsx[m
[1mindex 211bccf..11edaaa 100644[m
[1m--- a/src/components/sign-in-form/sign-in-form.component.jsx[m
[1m+++ b/src/components/sign-in-form/sign-in-form.component.jsx[m
[36m@@ -4,7 +4,10 @@[m [mimport Button, { BUTTON_TYPE_CLASSES } from "../button/button.component";[m
 import FormInput from "../form-input/form-input.component";[m
 import { signInAuthUserWithEmailAndPassword } from "../../utils/firebase/firebase.utils";[m
 import { SignInContainer, ButtonsContainer } from "./sign-in-form.styles";[m
[31m-import { googleSignInStart } from "../../store/user/user.action";[m
[32m+[m[32mimport {[m
[32m+[m[32m  emailSignInStart,[m
[32m+[m[32m  googleSignInStart,[m
[32m+[m[32m} from "../../store/user/user.action";[m
 [m
 const defaultFormFields = {[m
   email: "",[m
[36m@@ -29,14 +32,11 @@[m [mconst SignInForm = () => {[m
     event.preventDefault();[m
 [m
     try {[m
[31m-      await signInAuthUserWithEmailAndPassword(email, password);[m
[32m+[m[32m      dispatch(emailSignInStart(email, password));[m
[32m+[m[32m      resetFormFields();[m
     } catch (error) {[m
[31m-      if (error.code === "auth/invalid-login-credentials") {[m
[31m-        alert("Invalid login credentials");[m
[31m-      }[m
[31m-      console.error(error);[m
[32m+[m[32m      console.log("user sign in failed", error);[m
     }[m
[31m-    resetFormFields();[m
   };[m
 [m
   const signInWithGoogle = async () => {[m
[1mdiff --git a/src/routes/navigation/navigation.component.jsx b/src/routes/navigation/navigation.component.jsx[m
[1mindex 7b94d4d..d66ea9b 100644[m
[1m--- a/src/routes/navigation/navigation.component.jsx[m
[1m+++ b/src/routes/navigation/navigation.component.jsx[m
[36m@@ -1,33 +1,41 @@[m
 import { Fragment } from "react";[m
 import { Outlet } from "react-router-dom";[m
[31m-import { useSelector } from "react-redux";[m
[31m-import { selectIsCartOpen } from "../../store/cart/cart.selector.js";[m
[31m-import { selectCurrentUser } from "../../store/user/user.selector.js";[m
[31m-import { ReactComponent as CrwnLogo } from "../../assets/crown.svg";[m
[31m-import { signOutUser } from "../../utils/firebase/firebase.utils";[m
[32m+[m[32mimport { useSelector, useDispatch } from "react-redux";[m
[32m+[m
 import CartIcon from "../../components/cart-icon/cart-icon.component";[m
 import CartDropdown from "../../components/cart-dropdown/cart-dropdown.component";[m
[32m+[m
[32m+[m[32mimport { selectIsCartOpen } from "../../store/cart/cart.selector";[m
[32m+[m[32mimport { selectCurrentUser } from "../../store/user/user.selector";[m
[32m+[m[32mimport { signOutStart } from "../../store/user/user.action";[m
[32m+[m
[32m+[m[32mimport { ReactComponent as CrwnLogo } from "../../assets/crown.svg";[m
[32m+[m
 import {[m
   NavigationContainer,[m
[31m-  LogoContainer,[m
   NavLinks,[m
   NavLink,[m
[31m-} from "./navigation.styles.jsx";[m
[32m+[m[32m  LogoContainer,[m
[32m+[m[32m} from "./navigation.styles";[m
 [m
 const Navigation = () => {[m
[32m+[m[32m  const dispatch = useDispatch();[m
   const currentUser = useSelector(selectCurrentUser);[m
   const isCartOpen = useSelector(selectIsCartOpen);[m
 [m
[32m+[m[32m  const signOutUser = () => dispatch(signOutStart());[m
[32m+[m
   return ([m
     <Fragment>[m
       <NavigationContainer>[m
         <LogoContainer to="/">[m
[31m-          <CrwnLogo />[m
[32m+[m[32m          <CrwnLogo className="logo" />[m
         </LogoContainer>[m
         <NavLinks>[m
           <NavLink to="/shop">SHOP</NavLink>[m
[32m+[m
           {currentUser ? ([m
[31m-            <NavLink as="span" className="nav-link" onClick={signOutUser}>[m
[32m+[m[32m            <NavLink as="span" onClick={signOutUser}>[m
               SIGN OUT[m
             </NavLink>[m
           ) : ([m
[1mdiff --git a/src/store/store.js b/src/store/store.js[m
[1mindex 0f1924d..55a323a 100644[m
[1m--- a/src/store/store.js[m
[1m+++ b/src/store/store.js[m
[36m@@ -11,7 +11,7 @@[m [mimport { rootReducer } from "./root-reducer";[m
 const persistConfig = {[m
   key: "root",[m
   storage,[m
[31m-  blacklist: ["user"],[m
[32m+[m[32m  whitelist: ["cart"],[m
 };[m
 [m
 const sagaMiddleware = createSagaMiddleware();[m
[36m@@ -23,7 +23,13 @@[m [mconst middleWares = [[m
   sagaMiddleware,[m
 ].filter(Boolean);[m
 [m
[31m-const composedEnhancers = compose(applyMiddleware(...middleWares));[m
[32m+[m[32mconst composeEnhancer =[m
[32m+[m[32m  (process.env.NODE_ENV !== "production" &&[m
[32m+[m[32m    window &&[m
[32m+[m[32m    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||[m
[32m+[m[32m  compose;[m
[32m+[m
[32m+[m[32mconst composedEnhancers = composeEnhancer(applyMiddleware(...middleWares));[m
 [m
 export const store = createStore([m
   persistedReducer,[m
[1mdiff --git a/src/store/user/user.action.js b/src/store/user/user.action.js[m
[1mindex 067f300..2b37300 100644[m
[1m--- a/src/store/user/user.action.js[m
[1m+++ b/src/store/user/user.action.js[m
[36m@@ -4,12 +4,13 @@[m [mimport { createAction } from "../../utils/reducer/reducer.utils";[m
 export const setCurrentUser = (user) =>[m
   createAction(USER_ACTION_TYPES.SET_CURRENT_USER, user);[m
 [m
[31m-/* [m
[31m-  CHECK_USER_SESSION: "user/CHECK_USER_SESSION",[m
[31m-  GOOGLE_SIGN_IN_START: "user/GOOGLE_SIGN_IN_START",[m
[31m-  EMAIL_SIGN_IN_START: "user/EMAIL_SIGN_IN_START",[m
[31m-  SIGN_IN_SUCCESS: "user/SIGN_IN_SUCCESS",[m
[31m-  SIGN_IN_FAILURE: "user/SIGN_IN_FAILURE",[m
[32m+[m[32m/*[m
[32m+[m[32mCHECK_USER_SESSION: 'user/CHECK_USER_SESSION',[m
[32m+[m[32m  GOOGLE_SIGN_IN_START: 'user/GOOGLE_SIGN_IN_START',[m
[32m+[m[32m  EMAIL_SIGN_IN_START: 'user/EMAIL_SIGN_IN_START',[m
[32m+[m[32m  SIGN_IN_SUCCESS: 'user/SIGN_IN_SUCCESS',[m
[32m+[m[32m  SIGN_IN_FAILURE: 'user/SIGN_IN_FAILURE'[m
[32m+[m
 */[m
 [m
 export const checkUserSession = () =>[m
[36m@@ -39,3 +40,12 @@[m [mexport const signUpSuccess = (user, additionalDetails) =>[m
 [m
 export const signUpFailed = (error) =>[m
   createAction(USER_ACTION_TYPES.SIGN_UP_FAILED, error);[m
[32m+[m
[32m+[m[32mexport const signOutStart = () =>[m
[32m+[m[32m  createAction(USER_ACTION_TYPES.SIGN_OUT_START);[m
[32m+[m
[32m+[m[32mexport const signOutSuccess = () =>[m
[32m+[m[32m  createAction(USER_ACTION_TYPES.SIGN_OUT_SUCCESS);[m
[32m+[m
[32m+[m[32mexport const signOutFailed = (error) =>[m
[32m+[m[32m  createAction(USER_ACTION_TYPES.SIGN_OUT_FAILED, error);[m
[1mdiff --git a/src/store/user/user.reducer.js b/src/store/user/user.reducer.js[m
[1mindex ea04f55..f05e5a0 100644[m
[1m--- a/src/store/user/user.reducer.js[m
[1m+++ b/src/store/user/user.reducer.js[m
[36m@@ -11,11 +11,12 @@[m [mexport const userReducer = (state = INITIAL_STATE, action) => {[m
 [m
   switch (type) {[m
     case USER_ACTION_TYPES.SIGN_IN_SUCCESS:[m
[31m-      return {[m
[31m-        ...state,[m
[31m-        currentUser: payload,[m
[31m-      };[m
[32m+[m[32m      return { ...state, currentUser: payload };[m
[32m+[m[32m    case USER_ACTION_TYPES.SIGN_OUT_SUCCESS:[m
[32m+[m[32m      return { ...state, currentUser: null };[m
[32m+[m[32m    case USER_ACTION_TYPES.SIGN_OUT_FAILED:[m
     case USER_ACTION_TYPES.SIGN_IN_FAILED:[m
[32m+[m[32m    case USER_ACTION_TYPES.SIGN_UP_FAILED:[m
       return { ...state, error: payload };[m
     default:[m
       return state;[m
[1mdiff --git a/src/store/user/user.saga.js b/src/store/user/user.saga.js[m
[1mindex 66b20a6..37d0ae2 100644[m
[1m--- a/src/store/user/user.saga.js[m
[1m+++ b/src/store/user/user.saga.js[m
[36m@@ -1,17 +1,23 @@[m
 import { takeLatest, put, all, call } from "redux-saga/effects";[m
[32m+[m
 import { 